## Workflow for building and deploying into SAP Commerce cloud CCV2 dev and staging envs
env:
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
  BUILD_NAME:  SAPCOMMERCE.BUILD.$(date +'%Y.%m.%d.%H.%M')
  DATABASE_UPDATE_MODE: UPDATE
  DEPLOYMENT_STRATEGY: ROLLING_UPDATE
  ENVIRONMENT_CODE: d1
  CCV2_URL: https://portalrotapi.hana.ondemand.com/v2/subscriptions
  CCV2_AUTH_ACCESS_TOKEN: ${{ secrets.CCV2_AUTH_ACCESS_TOKEN }}
  CCV2_SUBSCRIPTION_CODE: ${{ secrets.CCV2_SUBSCRIPTION_CODE }}
  CCV2_BASE_URL : https://portalrotapi.hana.ondemand.com/v2/subscriptions/${{secrets.CCV2_SUBSCRIPTION_CODE}}
on:
  push:
    branches:
      - 'release/**'
      - develop
  workflow_dispatch:
jobs:
  SAPCOM_BUILD_AND_DEPLOY_JOB:
    runs-on: ubuntu-latest
    steps:
      - name: Create Build
        run: |
          #!/bin/bash
          echo "URL: ${{env.CCV2_BASE_URL}}"
          echo "BUILD_NAME : ${{ env.BUILD_NAME }}"
          ccv2_build_url="${{env.CCV2_BASE_URL}}/builds";
          payload='{"branch": "${{ env.BRANCH_NAME}}", "name": "'"${{ env.BUILD_NAME }}"'"}';
          echo "Payload :: $payload"
          buildcode=$(curl --location --request POST "$ccv2_build_url" --header 'Content-Type: application/json' --header "Authorization: Bearer ${{env.CCV2_AUTH_ACCESS_TOKEN}}" --data-raw "$payload" | jq '.code')
          echo "buildcode=$buildcode" >> $GITHUB_ENV
          echo "Create Build Response:  $buildcode"
      - name: Check Build Progress
        run: |
         echo "Check Build progress of buildcode : ${{ env.buildcode }}"
         ccv2_build_url="${{env.CCV2_BASE_URL}}/builds";
         while (true) 
           do
              echo "checkBuild buildcode : ${{ env.buildcode }}"
              progress_ccv2_build_url="$ccv2_build_url/${{ env.buildcode }}/progress"
              echo "URL: $progress_ccv2_build_url"
              buildresponse=$(curl --location --request GET "$progress_ccv2_build_url" --header "Authorization: Bearer ${{env.CCV2_AUTH_ACCESS_TOKEN}}")
              buildStatus=$(jq -n "$buildresponse" | jq '.buildStatus')
              percentage=$(jq -n "$buildresponse" | jq '.percentage')
              echo "Check Progress Status: $buildStatus"
              if [ $buildStatus = '"SUCCESS"' ];then
                echo "Build Succeeded" 
                break
              elif [ $buildStatus  = '"FAIL"' ];then
                echo "Failed"
                exit 1
              else
                echo "Build inProgress.. $percentage % completed" 
                sleep 600
              fi
           done
          echo "Build Completed"
        shell: bash
      - name: Create Deployment
        run: |
          #!/bin/bash
          echo "URL: ${{env.CCV2_BASE_URL}}"
          ccv2_deployment_url="${{env.CCV2_BASE_URL}}/deployments";
          echo "Deployment URL: $ccv2_deployment_url"
          echo "Branch name: ${{env.BRANCH_NAME}}"
          environmentCode="${{env.ENVIRONMENT_CODE}}";
          if [[ ${{env.BRANCH_NAME}} == "release/"* ]];then
            environmentCode="s1"
          fi
          payload='{"buildCode": ${{ env.buildcode }}, "databaseUpdateMode": "UPDATE", "environmentCode": "'"$environmentCode"'", "strategy": "ROLLING_UPDATE"}';
          echo "Payload: $payload"
          deploymentcode=$(curl --location --request POST "$ccv2_deployment_url" --header 'Content-Type: application/json' --header "Authorization: Bearer ${{env.CCV2_AUTH_ACCESS_TOKEN}}" --data-raw "$payload" | jq '.code')
          echo "deploymentcode=$deploymentcode" >> $GITHUB_ENV
          echo "Create Deployment Response:  $deploymentcode" 
      - name: Check Deployment Progress
        run: |
         echo "Check Deployment progress of deployment code : ${{ env.deploymentcode }}"
         ccv2_deployment_url="${{env.CCV2_BASE_URL}}/deployments";
         while (true) 
           do
              echo "checkdeployment progress for code : ${{ env.deploymentcode }}"
              ccv2_deployment_progress_url="$ccv2_deployment_url/${{env.deploymentcode}}/progress"
              echo "URL: $progress_ccv2_deployment_url"
              deploymentresponse=$(curl --location --request GET "$ccv2_deployment_progress_url" --header "Authorization: Bearer ${{env.CCV2_AUTH_ACCESS_TOKEN}}")
              deploymentStatus=$(jq -n "$deploymentresponse" | jq '.deploymentStatus')
              percentage=$(jq -n "$deploymentresponse" | jq '.percentage')
              echo "Check Progress Status: $deploymentStatus"
              if [ $deploymentStatus = '"DEPLOYED"' ];then
                echo "Deployment Succeeded" 
                break
              elif [ $deploymentStatus  = '"FAIL"' ];then
                echo "Failed"
                exit 1
              else
                echo "Deployment inProgress.. $percentage % completed" 
                sleep 600
              fi
           done
          echo "Deployment Completed"
        shell: bash
